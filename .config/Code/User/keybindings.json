// Place your key bindings in this file to override the defaults
[
  //
  // VIM NAVIGATION SHORTCUTS
  //
  {
    // "ctrl+h": Focuses on the left editor group when the text editor is focused, Vim extension is active, and Vim is not in Insert mode
    "key": "ctrl+h",
    "command": "workbench.action.focusLeftGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    // "ctrl+l": Focuses on the right editor group when the text editor is focused, Vim extension is active, and Vim is not in Insert mode
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    // "ctrl+k": Focuses on the editor group above when the text editor is focused, Vim extension is active, and Vim is not in Insert mode
    "key": "ctrl+k",
    "command": "workbench.action.focusAboveGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    // "ctrl+j": Focuses on the editor group below when the text editor is focused, Vim extension is active, and Vim is not in Insert mode
    "key": "ctrl+j",
    "command": "workbench.action.focusBelowGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },

  //
  // NAVIGATION SHORTCUTS STARTING WITH CMD
  //
  // use CMD+1 to open explorer
  {
    "key": "cmd+1",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "explorerViewletFocus"
  },
  {
    "key": "cmd+1",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled && !explorerViewletFocus"
  },
  // use CMD+2 to open copilot
  {
    "key": "cmd+2",
    "command": "workbench.panel.chat",
    "when": "workbench.panel.chat.view.copilot.active"
  },
  // use CMD+3 to open git
  {
    "key": "cmd+3",
    "command": "lazygit-vscode.toggle"
  },
  // use CMD+e to open quickOpen
  {
    "key": "cmd+e",
    "command": "workbench.action.quickOpen",
    "when": "!inQuickOpen"
  },

  // START: Core settings
  {
    "key": "shift+cmd+a",
    "command": "workbench.action.showCommands"
  },
  // open vim command line with :
  {
    "key": "shift+;",
    "command": "vim.showQuickpickCmdLine",
    "when": "editorTextFocus && vim.mode != 'Insert'"
  },
  // use ctrl+e to open recent folders
  {
    "key": "ctrl+e",
    "command": "workbench.action.openRecent",
    "when": "!terminalFocus"
  },
  // escape to focus on editor from explorer
  {
    "key": "escape",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "explorerViewletFocus"
  },
  // escape to focus on editor from chat
  {
    "key": "escape",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!inlineChatFocused && inChat"
  },
  // END: Core settings
  // START: Window settings
  // use ctrl+q to close window
  {
    "key": "ctrl+q",
    "command": "workbench.action.closeWindow"
  },
  // END: Window settings
  // START: Editors settings
  // Move around editors
  {
    "key": "shift+h",
    "command": "workbench.action.previousEditor",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "shift+l",
    "command": "workbench.action.nextEditor",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
  },
  // END: Editors settings
  // START: Explorer settings
  {
    "key": "a",
    "command": "workbench.files.action.createFileFromExplorer",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "moveFileToTrash",
    "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+v",
    "command": "explorer.openToSide",
    "when": "explorerViewletFocus && foldersViewVisible && !inputFocus"
  },
  // END: Explorer settings

  //
  // GIT NAVIGATION SHORTCUTS
  // cmd+g = vscode built-in git
  //

  // when editorHasSelection
  // [g]it [r]evert
  {
    "key": "cmd+g r",
    "command": "git.revertSelectedRanges",
    "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
  },
  // [g]it [s]tage
  {
    "key": "cmd+g s",
    "command": "git.stageSelectedRanges",
    "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
  },
  // [g]it [u]nstage
  {
    "key": "cmd+g u",
    "command": "git.unstageSelectedRanges",
    "when": "editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git'"
  },

  // when !editorHasSelection
  {
    "key": "cmd+g l",
    "command": "git.pull"
  },
  // open change in this file
  {
    "key": "cmd+g o",
    "command": "git.openChange"
  },
  // open change but bigger (all files)
  {
    "key": "cmd+g shift+o",
    "command": "git.viewChanges"
  },
  {
    "key": "cmd+g c c",
    "command": "git.commit",
    "when": "!operationInProgress"
  },
  {
    "key": "cmd+g c a",
    "command": "git.commitAmend",
    "when": "!operationInProgress"
  },
  // [g]it [s]tash
  {
    "key": "cmd+g s s",
    "command": "git.stash",
    "when": "!editorHasSelection"
  },
  // [g]it [s]tash [p]op
  {
    "key": "cmd+g s p",
    "command": "git.stashPop",
    "when": "!editorHasSelection"
  },

  //
  // TERMINAL SHORTCUTS
  //
  // use CMD+J to interact with terminal
  {
    "key": "cmd+j cmd+j",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  // [n]ew profile [t]mux
  {
    "key": "cmd+j n t",
    "command": "workbench.action.terminal.newWithProfile",
    "args": { "profileName": "vscode-tmux" }
  },
]
