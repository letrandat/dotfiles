// Place your key bindings in this file to override the defaults
// NOTE: Keep this file super small,
// prefer to keep all the key bindings under vscodevim's scope
// unless the keybindings need to run when !textEditorFocus
[
  //
  // NAVIGATION SHORTCUTS STARTING WITH CMD
  //
  // use CMD+e to open explorer
  {
    "key": "cmd+e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "explorerViewletFocus"
  },
  {
    "key": "cmd+e",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled && !explorerViewletFocus"
  },
  // use CMD+L to open copilot
  {
    "key": "cmd+l",
    "command": "workbench.panel.chat",
    "when": "workbench.panel.chat.view.copilot.active"
  },

  //
  // FILE MENU
  //
  // use ctrl+e to switch to new folder
  {
    "key": "ctrl+e",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        // send ctrl+u to terminal to clear terminal before running command
        {
          "key": "cmd+w shift+V",
          "command": "workbench.action.terminal.sendSequence",
          "args": { "text": "\u0015vscode-switcher\u000D" }
        },
        // focus on terminal to select the folder
        {
          "command": "workbench.action.terminal.toggleTerminal",
          "when": "terminal.active"
        }
      ]
    }
  },

  //
  // EXPLORER SHORTCUTS
  //
  {
    "key": "a",
    "command": "workbench.files.action.createFileFromExplorer",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "moveFileToTrash",
    "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+v",
    "command": "explorer.openToSide",
    "when": "explorerViewletFocus && foldersViewVisible && !inputFocus"
  },

  //
  // GIT NAVIGATION SHORTCUTS
  // cmd+g = vscode built-in git. Mainly used for git commit and amend
  //
  {
    "key": "cmd+g c c",
    "command": "git.commit",
    "when": "!operationInProgress"
  },
  {
    "key": "cmd+g c a",
    "command": "git.commitAmend",
    "when": "!operationInProgress"
  },

  //
  // TERMINAL SHORTCUTS
  //
  // use CMD+shift+j for extra interaction with terminal
  // [n]ew profile [t]mux
  {
    "key": "cmd+shift+j n t",
    "command": "workbench.action.terminal.newWithProfile",
    "args": { "profileName": "vscode-tmux" }
  },
  // [m]aximize terminal
  {
    "key": "cmd+shift+j m",
    "command": "extension.multiCommand.maximizeAndFocusPanel"
  },

  //
  // WINDOWS AND EDITORS SHORTCUTS
  // cmd+w = vscode built-in windows and editors
  // it's equivalent to <leader> b in vim, useful when I am not at an editor
  // focus on active editor and maximize it
  {
    "key": "cmd+w m",
    "command": "extension.multiCommand.maximizeAndFocusActiveEditorGroup"
  },
  // [d]elete active editor
  {
    "key": "cmd+w d",
    "command": "workbench.action.closeActiveEditor"
  },
  // simulate buffers list in vim, useful when I am at certain window that is not an editor
  {
    "key": "cmd+w ,",
    "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
  },
  // shortcuts
  // jumpto dotfiles
  {
    "key": "cmd+w .",
    // send ctrl+u to terminal to clear terminal before running command
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u0015code ~/workspace/repo/dotfiles\u000D" }
  },
  //Jump to project 1: currently go
  {
    "key": "cmd+w 1",
    // send ctrl+u to terminal to clear terminal before running command
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u0015code ~/workspace/repo/learn-go-with-tests\u000D" }
  },

  //
  // HARPOON SHORTCUTS
  //
  {
    "key": "alt+a",
    "command": "vscode-harpoon.addEditor"
  },
  // [v]iew editors
  {
    "key": "alt+v",
    "command": "vscode-harpoon.editEditors"
  },
  {
    "key": "alt+p",
    "command": "vscode-harpoon.editorQuickPick"
  },
  {
    "key": "alt+0",
    "command": "vscode-harpoon.gotoGlobalEditor1"
  },
  {
    "key": "alt+1",
    "command": "vscode-harpoon.gotoEditor1"
  },
  {
    "key": "alt+2",
    "command": "vscode-harpoon.gotoEditor2"
  },
  {
    "key": "alt+3",
    "command": "vscode-harpoon.gotoEditor3"
  },
  {
    "key": "alt+4",
    "command": "vscode-harpoon.gotoEditor4"
  },
  {
    "key": "alt+5",
    "command": "vscode-harpoon.gotoEditor5"
  },
  {
    "key": "alt+6",
    "command": "vscode-harpoon.gotoEditor6"
  },
  {
    "key": "alt+7",
    "command": "vscode-harpoon.gotoEditor7"
  },
  {
    "key": "alt+8",
    "command": "vscode-harpoon.gotoEditor8"
  },
  {
    "key": "alt+9",
    "command": "vscode-harpoon.gotoEditor9"
  },

  //
  // ESCAPE KEYBINDINGS
  //
  // escape to focus on editor from explorer
  {
    "key": "escape",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "explorerViewletFocus"
  },
  // escape to focus on editor from chat
  {
    "key": "escape",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!inlineChatFocused && inChat"
  },

  //
  // TESTING KEYBINDINGS
  //
  {
    "key": "cmd+; .",
    "command": "testing.reRunLastRun"
  },

  //
  // TASKS RUN CONFIGURATION
  //
  // [r]un
  {
    "key": "cmd+t r",
    "command": "workbench.action.tasks.runTask"
  },
  // rerun last
  {
    "key": "cmd+t .",
    "command": "workbench.action.tasks.reRunTask"
  },
  // [b]uild
  {
    "key": "cmd+t b",
    "command": "workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  // [c]onfigure
  {
    "key": "cmd+t c",
    "command": "workbench.action.tasks.configureTaskRunner"
  },
  // [g]et running tasks
  {
    "key": "cmd+t g",
    "command": "workbench.action.tasks.showTasks"
  },
  // [x] terminate
  {
    "key": "cmd+t x",
    "command": "workbench.action.tasks.terminate"
  },
  // [l]og
  {
    "key": "cmd+t l",
    "command": "workbench.action.tasks.showLog"
  },
  // [t]est
  {
    "key": "cmd+t t",
    "command": "workbench.action.tasks.test"
  },
  // [R]estart
  {
    "key": "cmd+t shift+r",
    "command": "workbench.action.tasks.restartTask"
  }
]
