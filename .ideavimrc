""" NOTES """
" to reload vimrc :action IdeaVim.ReloadVimRc.reload

""" CORE SETTINGS """
" Yank to system clipboard
set clipboard+=unnamed
" Stop Vim from yanking visual selected text
xnoremap p pgvy
set relativenumber

""" REMAP """
" Map leader to space
let mapleader=" "
" Y to copy from current to $
nmap Y y$

"""" General """"
" Action Go to File
map <leader><leader> <Action>(GotoFile)
" Action Go to Action
map <leader>a <Action>(GotoAction)

" Run/Debug Configuration
map <leader>r <Action>(ChooseRunConfiguration)
map <leader>d <Action>(ChooseDebugConfiguration)


"""" Browsing code """"
" re-map gd to implementation
map gd <Action>(GotoImplementation)
" re-map C-o/C-i to go back(out) and forward(in)
map <C-o> <Action>(Back)
map <C-i> <Action>(Forward)
" re-map `. to JumpToLastChange because default ideavim only jump to the same buffer
map `. <Action>(JumpToLastChange)

" map gu to find usages
map gu <Action>(FindUsages)
" map C-k to ParameterInfo which is equivalent to Signature Help in lazyvim
map <C-k> <Action>(ParameterInfo)

" Splitter
map <C-h> <Action>(NextSplitter)
map <C-l> <Action>(PrevSplitter)

" Tab
nmap L <Action>(NextTab)
nmap H <Action>(PreviousTab)

"""" Utility """"
" Buffer: close(bo) all others
map <leader>bo <Action>(CloseAllEditorsButActive)

"""" Refactor """"
" Rename
map <leader>rn <Action>(RenameElement)

""" PLUGINS """
"""" easymotion start """"
set easymotion
" f<char> to jump to anywhere
map f <Plug>(easymotion-jumptoanywhere)
"""" easymotion end """"

"""" NERDTree start """"
set NERDTree
"""" NERDTree end """"

